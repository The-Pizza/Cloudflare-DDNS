# .github/workflows/release-image.yml
# Builds and publishes a container image to GitHub Container Registry (GHCR)
# whenever you publish a GitHub Release.
#
# Tags produced:
#  - ghcr.io/<owner>/<repo>:<release tag>        (e.g. v1.2.3)
#  - ghcr.io/<owner>/<repo>:<major.minor>        (e.g. 1.2)
#  - ghcr.io/<owner>/<repo>:<major>              (e.g. 1)
#  - ghcr.io/<owner>/<repo>:latest               (only for non-prerelease)
#
# Requires no extra secrets; uses GITHUB_TOKEN with packages: write.

name: release-image

on:
  release:
    types: [published]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

env:
  IMAGE_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}    # owner/repo (GitHub lowercases automatically for GHCR)

jobs:
  build-and-push:
    name: Build & Push image
    runs-on: ubuntu-latest
    concurrency:
      group: release-image-${{ github.ref }}
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          # Generate tags from the release tag (e.g., v1.2.3)
          tags: |
            type=semver,pattern={{version}},value=${{ github.event.release.tag_name }}
            type=semver,pattern={{major}}.{{minor}},value=${{ github.event.release.tag_name }}
            type=semver,pattern={{major}},value=${{ github.event.release.tag_name }}
            # Only tag :latest for non-prereleases
            type=raw,value=latest,enable=${{ !github.event.release.prerelease }}

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          # If your dependencies support arm64, keep both. Otherwise set to linux/amd64 only.
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Summarize
        run: |
          echo "Published:"
          echo "${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "Tags:"
          echo "${{ steps.meta.outputs.tags }}"
