---
apiVersion: v1
kind: Namespace
metadata:
  name: cloudflare-ddns
  labels:
    app.kubernetes.io/name: cloudflare-ddns
    app.kubernetes.io/part-of: cloudflare-ddns
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-ddns-secret
  namespace: cloudflare-ddns
type: Opaque
stringData:
  CF_API_TOKEN: "REPLACE_WITH_YOUR_CLOUDFLARE_API_TOKEN"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflare-ddns-config
  namespace: cloudflare-ddns
data:
  # This file defines the DNS records the updater should manage. 
  # Use cf_export_a_records.py to stage.
  records.json: |
    {
      "records": [
        {
          "zone_name": "example.com",
          "record_name": "home.example.com",
          "proxied": true,
          "ttl": 300
        }
      ]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflare-ddns-settings
  namespace: cloudflare-ddns
data:
  # How often (in seconds) to check your current public IP
  IP_POLL_INTERVAL_SECONDS: "60"

  # Where to fetch your current public IP (IPv4 endpoint)
  IPV4_ENDPOINT: "https://ipinfo.io/ip"

  # Default TTL for created/updated DNS records.  1 for Auto.
  DEFAULT_TTL: "1"

  # Default Cloudflare proxy setting (true/false)
  DEFAULT_PROXIED: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflare-ddns
  namespace: cloudflare-ddns
  labels:
    app.kubernetes.io/name: cloudflare-ddns
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudflare-ddns
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudflare-ddns
    spec:
      automountServiceAccountToken: false
      containers:
        - name: cloudflare-ddns
          image: ghcr.io/the-pizza/cloudflare-ddns:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: CF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: cloudflare-ddns-secret
                  key: CF_API_TOKEN
            - name: CONFIG_PATH
              value: /etc/config/records.json
          envFrom:
            - configMapRef:
                name: cloudflare-ddns-settings
          volumeMounts:
            - name: records
              mountPath: /etc/config
              readOnly: true
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10001
      securityContext:
        fsGroup: 10001
      volumes:
        - name: records
          configMap:
            name: cloudflare-ddns-config
            defaultMode: 0444
